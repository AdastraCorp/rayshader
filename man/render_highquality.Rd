% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render_highquality.R
\name{render_highquality}
\alias{render_highquality}
\title{Render High Quality}
\usage{
render_highquality(filename = NULL, light = TRUE,
  lightdirection = 315, lightangle = 45, lightsize = NULL,
  lightintensity = 500, lightcolor = "white", cache_filename = NULL,
  width = NULL, height = NULL, ground_material = diffuse(),
  scene_elements = NULL, offset_camera = c(0, 0, 0),
  offset_lookat = c(0, 0, 0), clear = FALSE, ...)
}
\arguments{
\item{filename}{Filename of saved image. If missing, will display to current device.}

\item{light}{Default `TRUE`. Whether there should be a light in the scene. If not, the scene will be lit with a bluish sky.}

\item{lightdirection}{Default `315`. Position of the light angle around the scene. 
If this is a vector longer than one, multiple lights will be generated (using values from 
`lightangle`, `lightintensity`, and `lightcolor`)}

\item{lightangle}{Default `45`. Position above the horizon that the light is located. 
If this is a vector longer than one, multiple lights will be generated (using values from 
`lightdirection`, `lightintensity`, and `lightcolor`)}

\item{lightsize}{Default `NULL`. Radius of the light(s). Automatically chosen, but can be set here by the user.}

\item{lightintensity}{Default `500`. Intensity of the light.}

\item{lightcolor}{Default `white`. The color of the light.}

\item{cache_filename}{Name of temporary filename to store OBJ file, if the user does not want to rewrite the file each time.}

\item{width}{Defaults to the width of the rgl window. Width of the rendering.}

\item{height}{Defaults to the height of the rgl window. Height of the rendering.}

\item{ground_material}{Default `diffuse()`. Material defined by the rayrender material functions.}

\item{scene_elements}{Default `NULL`. Extra scene elements to add to the scene, created with rayrender.}

\item{offset_camera}{Default `NULL`. Offset position of the camera.}

\item{offset_lookat}{Default `NULL`. Offset position at which the camera is directed.}

\item{clear}{Default `FALSE`. If `TRUE`, the current `rgl` device will be cleared.}

\item{...}{Additional parameters to pass to rayrender::render_scene()}
}
\description{
Renders a raytraced version of the displayed rgl scene, using the `rayrender` package. 
User can specify the light direction, intensity, and color, as well as specify the material of the 
ground and add additional scene elements.

Note: This version does not yet support meshes with missing entries (e.g. if any NA values are present,
output will be ugly and wrong).
}
\examples{
#Render the volcano dataset using pathtracing
\dontrun{
volcano \%>\%
 sphere_shade() \%>\%
 plot_3d(volcano,zscale = 2)
render_highquality()
}

#Change position of light
\dontrun{
render_highquality(lightdirection = 45)
}

#Change vertical position of light
\dontrun{
render_highquality(lightdirection = 45, lightangle=30)
}

#Change the ground material
\dontrun{
render_highquality(lightdirection = 45, lightangle=60, 
                  ground_material = rayrender::diffuse(checkerperiod = 30, checkercolor="grey50"))
}

#Add three different color lights
\dontrun{
render_highquality(lightdirection = c(0,120,240), lightangle=30, 
                  lightcolor=c("red","green","blue"))
}

#Add a shiny metal sphere
\dontrun{
render_highquality(lightdirection = c(0,120,240), lightangle=30, 
                  lightcolor=c("red","green","blue"),samples=10,
                  scene_elements = rayrender::sphere(z=-60,y=0,
                                                     radius=20,material=rayrender::metal()))
}

#Add a red light to the volcano and change the ambient light to dusk
\dontrun{
render_highquality(lightdirection = c(240), lightangle=30, 
                  lightcolor=c("#5555ff"),
                  scene_elements = rayrender::sphere(z=0,y=15, x=-18, radius=5,
                                   material=rayrender::diffuse(color="red",
                                                               lightintensity=10, 
                                                               implicit_sample=TRUE)))
}
}
